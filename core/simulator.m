function [scenario, egoVehicle] = simulator()
    % Construct a drivingScenario object.
    scenario = drivingScenario;
    
    % Add all road segments
    roadCenters = [-5.4 26.7 0;
        10.5 18.8 0;
        23.3 12.4 0;
        34.5 6.6 0;
        46.8 0.7 0;
        58 -4.9 0];
    % instead of hardcoding roadCenters, copy the value of roadCenters from Json file after appending z coordinates
    laneSpecification = lanespec(2);
    road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road');
    
    % Add the ego vehicle
    egoVehicle = vehicle(scenario, ...
        'ClassID', 1, ...
        'Position', [-3.2 27.1 0], ...
        'Mesh', driving.scenario.carMesh, ...
        'Name', 'Car');
    % mention the x and y coordinates of ego in 'Position' field from json file
    waypoints = [-3.2 27.1 0;
        7 22.2 0;
        18 16.6 0;
        24 13.7 0;
        29.2 10.1 0;
        31.8 8.4 0;
        40 5 0;
        44.9 2.8 0;
        49.6 -0.7 0;
        52.9 -1.6 0;
        55.1 -2.2 0;
        57.3 -3 0];
    % instead of hardcoding waypoints, assign it's values by calling a function generateEgoWaypoints() after 
    % appending z coordinates

    speed = [30;30;30;30;30;30;30;30;30;30;30;30];
    % instead of hardcoding speed, assign it's values by calling a function
    trajectory(egoVehicle, waypoints, speed);
    
    % Add the non-ego actors
    vehicle(scenario, ...
        'ClassID', 1, ...
        'Position', [-3.5 23.8 0], ...
        'Yaw', -28, ...
        'Mesh', driving.scenario.carMesh, ...
        'Name', 'Car1');
    % mention the x and y coordinates of this vehicle in 'Position' field from json file
    actor(scenario, ...
        'ClassID', 4, ...
        'Length', 0.24, ...
        'Width', 0.45, ...
        'Height', 1.7, ...
        'Position', [33.5 10 0], ...
        'RCSPattern', [-8 -8;-8 -8], ...
        'Mesh', driving.scenario.pedestrianMesh, ...
        'Name', 'Pedestrian');
    % mention the x and y coordinates of this pedestrian in 'Position' field from json file

    actor(scenario, ...
        'ClassID', 4, ...
        'Length', 0.24, ...
        'Width', 0.45, ...
        'Height', 1.7, ...
        'Position', [40 7.5 0], ...
        'RCSPattern', [-8 -8;-8 -8], ...
        'Mesh', driving.scenario.pedestrianMesh, ...
        'Name', 'Pedestrian');
    % mention the x and y coordinates of this pedestrian in 'Position' field from json file

    actor(scenario, ...
        'ClassID', 4, ...
        'Length', 0.24, ...
        'Width', 0.45, ...
        'Height', 1.7, ...
        'Position', [50 0.5 0], ...
        'RCSPattern', [-8 -8;-8 -8], ...
        'Mesh', driving.scenario.pedestrianMesh, ...
        'Name', 'Pedestrian');
    % mention the x and y coordinates of this pedestrian in 'Position' field from json file

    car2 = vehicle(scenario, ...
        'ClassID', 1, ...
        'Position', [3.06674047304131 20.9020717650009 0], ...
        'Mesh', driving.scenario.carMesh, ...
        'PlotColor', [255 255 0] / 255, ...
        'Name', 'Car2');
    % mention the x and y coordinates of this vehicle in 'Position' field from json file

    waypoints = [3.06674047304131 20.9020717650009 0;
        13 15.9 0;
        25.5 9.3 0;
        39.3 2.2 0;
        50.1 -3.4 0;
        55.8 -5.9 0];
    % instead of hardcoding waypoints, copy the value of waypoints from Json file after appending z coordinates
    speed = [15;15;15;15;15;15];
    % instead of hardcoding speed, copy the value of speed from Json file
    waittime = [0;0;0;0;0;0];
    trajectory(car2, waypoints, speed, waittime);
    drivingScenarioDesigner(scenario)
    